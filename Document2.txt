get-records -title "THINK TANK" 
get-records -title "GHOSTED" -include "Image" -Exclude "Skullkickers Poster Card Still A4 Novel" 
get-records -title "The Bounce" -include "image" -Exclude "VOL" 
get-records -title "CLONE" -include "Image" -exclude "VOL Lazarus Ghosted Orphanage" 
get-records -title "Manifest Destiny" -include "Image" -Exclude "Poster Card Still A4 Novel SET LOT"
get-records -title "Peter Panzerfaust" -exclude "volume vol chew pacific sex jesus sheltered Ninja Elephantmen"
get-records -title "Watchmen" -exclude "prints before novel spawn figure badge tpb after fashion essential swamp VOL"
get-records -title "Chew" -Exclude "America Pacific VOL dancer volume bedlam luther happy nightly romana VOL saga sex talent"
get-records -title "Sex Criminals"  
get-records -title "V for Vendetta" -Exclude "VOL"
get-records -title "SECRET" -include "Image" -exclude "Wars Skullkickers Poster Card Still A4 Novel SET LOT POYO RAGE Vibert HAPPY Marvel Deadpool"
get-records -title "The Walking Dead Weekly" -exclude "paperback chew volume dinosaur world monopoly"
get-records -title "The Walking Dead" -exclude "paperback chew volume dinosaur world weekly MONOPOLY"
get-records -title "Sheltered" -include "image" -exclude "vol volume"
get-records -title "Burn The Orphanage"
get-records -title "manhattan projects" -exclude "women vol volume"
get-records -title "The Nightly News"
get-records -title "Mind the gap"
get-records -title "Thief of Thieves" -Exclude "Super walking chew tpb VOL"
get-records -title "Lazarus" -exclude "five Incredible Moriarty Vol"
//get-records -title "Warrior" -Exclude "Commando Starblazer BBC 2000AD"

$test.getElementByID('fshippingCost').TextCOntent

###########################################################
ebid
$title="CHEW"
$url = "http://uk.ebid.net/perl/rss.cgi?type1=a&type2=a&words=chew%20-wolverine&category2=8077&categoryid=8077&categoryonly=on&mo=search&type=keyword"

$title="The Walking Dead"
$url = "http://uk.ebid.net/perl/rss.cgi?type1=a&type2=a&words=The%20Walking%20dead&category2=9120&categoryid=9120&categoryonly=on&mo=search&type=keyword"

$title="Think Tank"
$url="http://uk.ebid.net/perl/rss.cgi?type1=a&type2=a&words=think%20tank%20-fantastic&category2=645&categoryid=645&categoryonly=on&mo=search&type=keyword"

$title="GHOSTED"
$url="http://uk.ebid.net/perl/rss.cgi?type1=a&type2=a&words=ghosted&category2=645&categoryid=645&categoryonly=on&mo=search&type=keyword"

$title="CLONE"
$url="http://uk.ebid.net/perl/rss.cgi?type1=a&type2=a&words=clone%20image&category2=8077&categoryid=8077&categoryonly=on&mo=search&type=keyword"

$ebidresults=get-ebidresults -url $url
add-ebidarray -results $ebidresults -title $title
 
############################################################
#State Pending
#write-queries out to table
#update records when duplicates!

verify-record
get each open record for a type and fix, change state to verified

&_rss=1&
      
stuff i can figure out
fshippincost
seller=mbg
split sets
multiples (one item multiple stock)


starting price

$regex = '<item>[\s\S]*?<link>([\s\S]*?)</link>[\s\S]*?<title>([\s\S]*?)</title>[\s\S]*?</item>'

($results |Select-String -Pattern $regex -AllMatches).matches |foreach {$obj = New-Object psobject
$obj |Add-Member -MemberType NoteProperty -Name Title -Value $_.groups[2].value
$obj |Add-Member -MemberType NoteProperty -Name Link -Value $_.groups[1].value
$obj} |Out-GridView -Title JGW



Five Ghosts
Jupiters Legacy

